<?php

/**
 * This class is generated using the package carono/codegen
 */

namespace carono\etxtru\config;

class ArticlesGetListConfig extends \carono\etxtru\ConfigAbstract
{
	/**
	 * Число статей для выборке, не более 20 за запрос (по умолчанию)
	 *
	 * @var int
	 */
	public $count;

	/**
	 * Смещение от последней записи в выборке, по умолчанию 0
	 *
	 * @var int
	 */
	public $from;

	/**
	 * Идентификатор автора статьи для фильтрации списка
	 *
	 * @var int
	 */
	public $id_user;

	/**
	 * Идентификатор категории статьи для фильтрации списка
	 *
	 * @var int
	 */
	public $id_category;

	/**
	 * Опция поиска в подкатегориях (1 - искать в подкатегориях, 0 - нет, по умолчанию)
	 *
	 * @var int
	 */
	public $subcat;

	/**
	 * Идентификатор типа статьи для фильтрации списка (от 1 до 10)
	 *
	 * @var int
	 */
	public $id_subtype;

	/**
	 * Флаг показа купленных статей текущим пользователем, если указано 1, то будут выбраны только
	 * купленные статьи текущим пользователем, иначе только статьи на продажу
	 *
	 * @var int
	 */
	public $filter;

	/**
	 * Идентификатор статьи: будет выбрана только указанная статья
	 *
	 * @var int
	 */
	public $id;

	/**
	 * Строка для поиска по названию, описанию и ключевым словам
	 *
	 * @var string (40)
	 */
	public $text;

	/**
	 * Фильтрация по цене, от ... до, если указан параметр price_type (любое значение), то поиск по цене за 1000
	 * знаков
	 *
	 * @var int
	 */
	public $price_from;

	/**
	 * Фильтрация по цене, от ... до, если указан параметр price_type (любое значение), то поиск по цене за 1000
	 * знаков
	 *
	 * @var int
	 */
	public $price_to;

	/**
	 * Фильтрация по цене, от ... до, если указан параметр price_type (любое значение), то поиск по цене за 1000
	 * знаков
	 *
	 * @var int
	 */
	public $price_type;

	/**
	 * Фильтрация по размеру текста, от ... до
	 *
	 * @var int
	 */
	public $size_from;

	/**
	 * Фильтрация по размеру текста, от ... до
	 *
	 * @var int
	 */
	public $size_to;

	/**
	 * Фильтрация по уникальности статьи, от ... до
	 *
	 * @var int
	 */
	public $uniq_from;

	/**
	 * Фильтрация по уникальности статьи, от ... до
	 *
	 * @var int
	 */
	public $uniq_to;

	/**
	 * Фильтрация по языку статьи, список идентификаторов options.getLangs, если 0 или ошибочен, то без учета
	 * параметра
	 *
	 * @var int
	 */
	public $id_language;

	/**
	 * Сортировка статей, значения: relevancy (по релевантности при поиске по тексту), title (по названию), price (по
	 * цене), size (по размеру), uniq (по уникальности), date (по дате добавления - по умолчанию)
	 *
	 * @var string
	 */
	public $sort;

	/**
	 * Порядок сортировки статей, только при заданном параметре sort, значения: desc (по убыванию), asc (по
	 * возрастанию)
	 *
	 * @var string
	 */
	public $order;


}
